構築するシステムの全体像
    冗長構成でWPからWEBサイトを表示する
初期設定
    AWSアカウント作成
    Cloudwatchで料金アラート設定
    IAMで作業用ユーザを作成
    Cloudtrailで操作ログを記録
ネットワークの構築
    IPアドレスを決める
        VPC;10.0.0.0/16；ネットワーク部とホスト部
        パブリックIPアドレス；インターネットに出るためユニークな数値
        プライベートIPアドレス；範囲は決まっているが、ユニークでなくてもOK
    VPCを作成
    サブネットを作成
        パブリックサブネット；10.0.10.0/24(Cidrブロック)
        プライベートサブネット；10.0.20.0/24(Cidrブロック)
    ルーティングを設定
        IGWを作成しVPCにアタッチするAWS
        RTを作成しサブネットと紐づける
        ルート指定し、インターネットに接続できるようにする
            0.0.0.0/16のIGWとパブリックサブネットを紐づける
Webサーバを構築
    EC2を作成する
        ストレージ
            EBS（高耐久性・スナップショットを取得しS3に格納可能）とインスタンスストア（一時的・揮発性）
        自動割り当てパブリックIP（インターネット通信したければ有効）
        NWIF（プライベートIPアドレス。パブリックサブネットの範囲内で設定する）
    SSHでログイン
        暗号化された遠隔ログインシステム
        Windowsの場合
            Teratermであれば、必要な情報を記載して接続をする
                EC2User
                キーペアを選択
                パブリックIPを選択
        MAcの場合
            ターミナルから
                chmod 600 =/desktop/aws-ss（秘密鍵）　＃オーナー以外が鍵を読み書きできないようなコマンド
                ssh -i =/desktop/aws-ss（秘密鍵） ec2-user@パブリックIP
        ポート番号について
            ウェルノウンポート
                SSH：22
                HTTP:80
                HTTPS:443
                SMTP:25
    Apache（Webサーバ）をインストール
        sudo yum update -y #Yumを最新版にする
        sudo yum -y install httpd ＃アパッチをインストール
        sudo systemctl start httpd.service ＃アパッチを起動する
        sudo systemctl enable httpd.service #Apacheの自動起動設定
    セキュリティグループ（ファイアウォール）を設定
        インバウンド　＃設定値以外は通さない
            HTTP:80を開く
        アウトバウンド
            基本フルオープン
    ElasticIPでパブリックIPを固定する
        ElasticIPを作成し、EC2に紐づける
            EC2が起動していたら無料
ドメインを登録　＃覚えづらいため
    DNSについて
        ネームサーバ（保管庫）とフルリゾルバ（ネームサーバから情報取得）で構成
            ドメイン名とIPアドレスの紐付けをリソースレコードと呼ぶ
                Aレコード；ドメインに紐づくIPアドレス
                NSレコード；ドメインゾーンを管理するネームサーバ
                MXレコード；ドメインに紐づくメール受信サーバ
                CNAMEレコード；リソースレコードの参照先
                SOA；ドメインのゾーンの管理情報
    レジストラでドメインを購入
    Route 53でDNSを設定
        ドメインのネームサーバーをRoute53に変更
            Route53でホストゾーン（DNS情報管理コンテナ）を作成
            レジストラの管理画面からネームサーバーをRoute53に変更
                ルーティングポリシー
                    シンプル・荷重・レイテンシー・位置情報
                ヘルスチェック
        ドメイン名にEC2のIPアドレスを紐づける
            Aレコードを追加
DBサーバを構築
    ブライベートサブネットを作成する
        RDSは複数のAZにサブネットを用意する必要がある　＃10.0.21.0/24
    RDSを設置する
        RDSはフルマネージド
            エンジン
                MySQL・PostgreSQL・Oracle・Aurora・MariaDB
            各種設定グループ
                DBパラメータ；DB設定値を制御
                DBオプション；RDSへの機能追加
                DBサブネット；起動させるサブネットを指定
            メリット
                可用性の向上；同じエンドポイントでレプリケーション
                パフォーマンスの向上；リードレプリカを簡単に構築
                運用負荷の軽減；自動的なバックアップ・ソフトウェアメンテナンス・監視
        作成準備
            SGの作成（EC2）　＃Webサーバ（MySQL）からのアクセスを許可
                ソース；SGを選択するとSG内のインスタンス全てからアクセス可能になる
            DBサブネットの作成
                RDSを作成するサブネットを指定　＃マルチAZ必須
            DBパラメータの作成
                DBエンジンの指定
            DBオプションの作成
        RDSを作成
            DBエンジン・サブネット・パラメータ・オプションなどを指定
    WebサーバからRDSにアクセスする
        sudo yum mySQL #WebサーバにMySQLをインストール
        mysql -h エンドポイント -u root -p #RDSに接続
WordPressを構築
    WP用のDB作成
        データベース作成
            CREATE DATABASE ・・・・ 　＃DBサーバ上でDB作成する
            SHOW DATABASES ＃確認する
        DBユーザ作成
            CREATE USER ・・・　＃DBユーザを作成
            GRANT ALL ON ・・・　＃ユーザに権限付与
            SELECT user ・・・　＃ユーザが作成されているか確認
    WPのインストール
        ライブラリのインストール
            sudo amazon-linux-extras install -y php7.2 
            install -y php php-mbstring 
        WPのダウンロード・解凍
            wget https;//・・・・・
            tar xzvf ファイル名・・・
            ls #展開されているか確認
        WPファイルをApacheから見える場所に移動させる
            cp -r ・・・　＃Apacheが参照しているファイルを指定
        WPファイルの所有者・グループを変更
            chown apache:apache ・・・
        Apacheの再起動
            systemctl restart httpd.service
    WPの設定
        WEBブラウザでドメイン名を入力するとWPにアクセスされる
        DB名・ホスト名などを入力しWPとDBを接続させる
        管理画面でWPを作成する
S3・Cloudflontで画像を配信
    S3について
        S3に画像保存する理由：拡張性が向上・高速化・性能分散
        3の利用シーン：静的コンテンツ・バッチ連携用のファイル置き場・ログ出力先・静的ウェブホスティング
    S3バケットを作成
        S3バケットを作成
        S3の権限を持ったIAMユーザを作成　#AmazonS3Fullaccessを付与したユーザを作成
    WordPressの設定
        プラグインのインストール
            WP Offload Media Lite　＃WPの管理画面で作業
        必要なライブラリをEC2にインストール
            yum install -y php-xml　
            systemctl restart httpd.service
        プラグインの設定
            nano wp-config.phpの設定情報の中に、上記プラグインの設定とアクセスキーを追記する
            WPの設定画面で設定を完了させる
            投稿一覧から画像を投稿し、画像のURLをみてS3から投稿されているか確認する
CloudFrontを設定
    CloudFrontから配信　＃ここまででもCFから配信される
        ディストリビューションの作成
    独自ドメインから配信　＃SEO上良いため
        ディストリビューションのIDから設定をする
            Certificate ManagerでSSLサーバ証明書を発行　
            CFのディストリビューションに独自ドメインを登録
        Route53で独自ドメインとCFドメインのCNAMEレコードを作成
            レコードセットを作成　＃CNAMEを追加
        Offload Mediaで独自ドメインを登録
            Custom Mediaに証明書を追記する
        画像のURLをみてS3から投稿されているか確認する
ELBで冗長化する
    ELBとは
        機能：負荷分散・ヘルスチェック
        特徴：自動でスケーラブル・AZにまたがる・従量課金
    AMIからもう一つEC2を作成する
        パブリックサブネットを作成・RTの関連付けでIGWをアタッチ
        AMIの作成
        AMIからEC2を作成
    ELBの作成
        新しいELBを作成
        ELBのDNS名からアクセスできるか確認
    独自ドメインからELBにアクセス
        Route53からAレコードを変更する
        TGの管理画面からUnhealtyかどうかを確認できる
RDSを冗長化する
    RDSの設定からマルチAZを有効化する
CloudWatchでシステムを監視する
    全体像
        CPU使用率が60％以上になったらCWでアラームをし、SNSでメール通知をする
    CloudWatchアラームを作成
        SNSトピックを作成
    アラートを確認
        yes > /dev/null/ & #アラートを出すためのコマンドを打つ
        top #CPU使用率を確認する
        kill -9 プロセス番号　＃プロセスを解放する
IAMでアクセス権限を管理する
    全体像
        DeveloperPolicy：EC2・RDSの全操作
        DirectorPolicy：C2読取のみ
        グループを作成し、規定のポリシーをアタッチ
        ユーザをグループに追加
        S3FullAccessのロールをEC2にアタッチ

NWの仕組み
    TCP/IPについて
        プロトコル群のこと
            アプリ：HTTP・DNS・SSH・SMTP
            トランスポート：TCP・UDP
            ネットワーク：IP・ICMP・ARP
            NWインターフェイス：Ethernet・PPP
    HTTPについて
        HTML等でコンテンツを送受信するプロトコル
        中身：リクエスト（ステータス）ライン・ヘッダー・ボディ
    TCPとUDPについて
        トランスポート層のプロトコル
            TCP：データの到達確認やコネクション管理がある
            UDP：コネクションレス・いつでもデータ送信・高速　＃電話や動画など
    IPについて
        ネットワーク層のプロトコル
            IPアドレス：インターネット上の住所
            ルーティング：終点までパケットを届ける
            パケットの分割・再構築処理
インフラ設計における重要な観点
    可用性：稼働率・目標復旧時間・災害対策
    性能・拡張性：性能目標・拡張性
    運用・保守性：運用時間・バックアップ・運用監視・メンテナンス
    セキュリティ：公開範囲
    移行性：移行スケジュール


    








    



        
    

    
        

    
    
    
